@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model X.PagedList.IPagedList<BookEntry>

@{
    ViewData["Title"] = "Справочник";
}

<h1>Телефонный справочник</h1>
<br />

<div class="container-fluid p-0">
    <div class="row">
        <div class="col-5" align="left">
            <form asp-action="Index" method="get" class="form-inline">
                <div class="form-group mb-2" style="display: flex">
                    <div class="mr-2 me-2">
                        <input name="searchString" value="@(ViewBag.CurrentFilter as string)" class="form-control" />
                    </div>
                    <button type="submit" class="btn btn-primary me-2 mr-2"><i class="fa fa-search"></i></button>
                    @if (ViewBag.CurrentFilter != null)
                    {
                        <a href="@Url.Action("Index", new { currentFilter = "" })" class="btn btn-secondary me-2">Назад</a>
                    }
                </div>
            </form>

        </div>
        <div class="col pe-0" align="right">
            @if (User.Identity.IsAuthenticated)
            {
                <a class="btn btn-success" asp-action="Create">Добавить запись </a>
            }
        </div>
    </div>
</div>
<br />
<nav aria-label="Page navigation example">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { cPage = page, currentFilter = ViewBag.CurrentFilter }),
        new PagedListRenderOptions()
        {
            LiElementClasses = new string[] {"page-item m-0 p-0 border-0"},
            UlElementClasses = new string[] {"pagination m-0"},
            EllipsesElementClass = "page-link",
            PageClasses = new string[] {"page-link"},
            DisplayLinkToFirstPage = PagedListDisplayMode.Never,
            DisplayLinkToLastPage = PagedListDisplayMode.Never,
            MaximumPageNumbersToDisplay = 5
        })
</nav>
<br />
<table class="table table-striped table-hover table-sm">
    <thead class="thead-light">
    @if(Model.Any())
    {
        var item = Model.First();
        <tr>
            <th>
                @Html.DisplayNameFor(modelItem => item.PersonnelNumber)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Name)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Position)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Department)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.LocalPhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.CityPhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Mail)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => item.Room)
            </th>
            @if (User.Identity.IsAuthenticated)
            {
                <th>

                </th>
                <th>

                </th>
                <th>

                </th>
            }
        </tr>
    }
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td class="PersonalNumberTable">
                <h5>
                    <div class="badge rounded-pill text-light" style="background-color: rgba(1,125,136,0.75)">
                        @item.PersonnelNumber
                    </div>
                </h5>
            </td>
            <td>
                @item.Name
            </td>
            <td>
                @item.Position
            </td>
            <td>
                @item.Department
            </td>
            <td class="LocalPhoneNumberTable">
                @item.LocalPhoneNumber
            </td>
            <td class="CityPhoneNumberTable">
                @item.CityPhoneNumber
            </td>
            <td>
                @item.Mail
            </td>
            <td class="RoomTable">
                @item.Room
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                <td>
                    <a class="btn btn-warning" style="width: 40px; background-color: rgba(252,184,11,0.75)" asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-edit" style="width: 16px; height: 16px;"></i></a>
                </td>
                <td>
                    <a class="btn btn-secondary" style="width: 40px; background-color: rgba(114,114,114,0.75)" asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle" style="width: 16px; height: 16px;"></i></a>
                </td>
                <td>
                    <a class="btn btn-danger" style="width: 40px; background-color: rgba(250,50,80,0.75)" asp-action="Delete" asp-route-id="@item.Id"><i class="fa fa-user-times" style="width: 16px; height: 16px;"></i></a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>
<br />
<nav aria-label="Page navigation example">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { cPage = page, currentFilter = ViewBag.CurrentFilter }),
        new PagedListRenderOptions()
        {
            LiElementClasses = new string[] {"page-item m-0 p-0 border-0"},
            UlElementClasses = new string[] {"pagination m-0"},
            EllipsesElementClass = "page-link",
            PageClasses = new string[] {"page-link"},
            DisplayLinkToFirstPage = PagedListDisplayMode.Never,
            DisplayLinkToLastPage = PagedListDisplayMode.Never,
            MaximumPageNumbersToDisplay = 5
        })
</nav>
<br/>
Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
